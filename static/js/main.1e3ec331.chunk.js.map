{"version":3,"sources":["logo.svg","components/Navbar.js","components/textarea.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","props","react_default","a","createElement","Fragment","className","concat","Mode","Bluish","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","changeToBlue","class","role","ToggleMode","for","style","Style","defaultProps","Textarea","_useState","useState","_useState2","Object","slicedToArray","text","setText","color","placeholder","value","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","split","length","Alert","Alertt","message","App","setMode","_useState3","_useState4","setStyle","_useState5","_useState6","setAlertt","msg","lowerText","charAt","slice","setTimeout","_useState7","_useState8","setBluish","components_Navbar","document","body","backgroundColor","console","log","components_textarea","reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.1e3ec331.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import PropTypes from \"prop-types\";\r\nimport React from 'react';\r\nimport  {Link} from \"react-router-dom\";\r\nimport \".././cssOfComponents/Navbar.css\"\r\nfunction Navbar(props){\r\n  // const [Mode, setMode] = useState(props.Mode);\r\n  // const [Style, setStyle] = useState({\r\n  //   color:\"black\"\r\n  // });\r\n  \r\n    // const toggleMode=()=>{\r\n    //   if(Mode===\"light\"){\r\n    //     setMode(\"dark\");\r\n    //     setStyle({color:\"white\"});\r\n    //     document.body.style.backgroundColor=\"black\";\r\n    //   }\r\n    //   else{\r\n    //     setMode(\"light\");\r\n    //     setStyle({color:\"black\"});\r\n    //     document.body.style.backgroundColor=\"white\";\r\n    //   }\r\n    // }\r\n    // function change(){\r\n    //   if(Mode===\"dark\"){\r\n    //     setStyle({color : \"black\"});\r\n    //   }\r\n    //   else{\r\n    //     setStyle({color : \"white\"});\r\n    //   }\r\n    // }\r\n    \r\n    return(\r\n        <>\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.Mode} bg-${props.Mode} ${props.Bluish}`} >\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"#\">About</a>\r\n        </li>\r\n        {/* <li className=\"nav-item dropdown\">\r\n          <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n            Dropdown\r\n          </a>\r\n          <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n            <li><a className=\"dropdown-item\" href=\"#\">Action</a></li>\r\n            <li><a className=\"dropdown-item\" href=\"#\">Another action</a></li>\r\n            <li><hr className=\"dropdown-divider\"/></li>\r\n            <li><a className=\"dropdown-item\" href=\"#\">Something else here</a></li>\r\n          </ul>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link disabled\">Disabled</a>\r\n        </li> */}\r\n      </ul>\r\n      {/* <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      <div className=\"circle1\" onClick={props.changeToBlue} ></div>\r\n      <div className=\"circle2\"></div>\r\n      <div className=\"circle3\"></div>\r\n      <div class=\"form-check form-switch\">\r\n  <input class=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.ToggleMode}/>\r\n  <label class=\"form-check-label\" for=\"flexSwitchCheckDefault\" style={props.Style}  >Enable dark mode</label>\r\n</div>\r\n      \r\n    </div>\r\n  </div>\r\n</nav>\r\n    </>\r\n    \r\n    );\r\n    \r\n  }\r\n  \r\n  Navbar.propTypes={title : PropTypes.string };\r\n  Navbar.defaultProps = {title : \"vidhi\"};\r\n\r\n\r\nexport default Navbar;\r\n","import React, { useState } from 'react';\r\nfunction Textarea(props) {\r\n    const [text, setText] = useState('');\r\n    const Change=(event) =>{\r\n        // console.log(\"changed\");\r\n        setText(event.target.value);\r\n    };\r\n    const ClickUpper=() =>{\r\n        // console.log(text);\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"changed to uppercase\",\"success\")\r\n    };\r\n    const ClickLower=()=>{\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"changed to lowercase\",\"success\")\r\n    }\r\n    const ClickClear=()=>{\r\n        setText(\"\");\r\n        props.showAlert(\"text cleared\",\"success\")\r\n    }\r\n    // setText('alsdkjf');\r\n    return (\r\n        <>\r\n            <div className=\"mb-3 container\">\r\n                <h1 className=\"mb-3\" style={{color: props.Mode===\"light\"?\"black\":\"white\"}}>Input text </h1>\r\n                <textarea  placeholder='Enter something' className=\"form-control mb-3\" value={text} onChange={Change} id=\"exampleFormControlTextarea1\" rows=\"7\"></textarea>\r\n                <button className=\"btn btn-primary mx-2\" onClick={ClickUpper}>click to Uppercase</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={ClickLower}>click to Lowercase</button>\r\n                <button className=\"btn btn-danger mx-2\" onClick={ClickClear}>clear</button>\r\n            </div>\r\n            <div className=\"container\" style={{color: props.Mode===\"light\"?\"black\":\"white\"}}>\r\n                <p>total words : {text.split(\" \").length} total characters : {text.length}</p>\r\n                <h1>Summary</h1>\r\n                <p>{text===\"\"?\"Enter something in above textbox for summary\":text}</p>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default Textarea;","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n    // const [Alertt, setAlertt] = useState(null);\r\n    // function showAlert(){\r\n    //     setAlertt(props.msg);\r\n    // }\r\n    // // setAlertt(props.Alertt);\r\n    // setAlertt(\"heyyy\");\r\n    // function capitalize(text){\r\n    //   let lowerText=text.toLowerCase();\r\n    //   return text.charAt(0).toUpperCase()+lowerText.slice(1);\r\n    // }\r\n    return (\r\n    props.Alertt && <div className={`alert alert-${props.Alertt.type}`} role=\"alert\"  >\r\n      {props.Alertt.message}\r\n    </div>\r\n  );\r\n}\r\n","import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport Navbar from \"./components/Navbar.js\";\r\nimport Textarea from \"./components/textarea.js\";\r\nimport React,{useState} from 'react'\r\nimport About from \"./components/About.js\";\r\nimport Alert from \"./components/Alert\";\r\n// import {\r\n  // BrowserRouter as Router,\r\n  // Routes,\r\n  // Route} from \"react-router-dom\";\r\nlet title = \"SWAYAM\";\r\nfunction App() {\r\n  const [Mode, setMode] = useState(\"light\");\r\n  const [Style, setStyle] = useState({\r\n    color:\"black\"\r\n  });\r\n  const toggleMode=()=>{\r\n    if(Mode===\"light\"){\r\n      setMode(\"dark\");\r\n      setStyle({color:\"white\"});\r\n      document.body.style.backgroundColor=\"black\";\r\n      showAlert(\"dark mode enabled\",\"success\");\r\n    }\r\n    else{\r\n      setMode(\"light\");\r\n      setStyle({color:\"black\"});\r\n      document.body.style.backgroundColor=\"white\";\r\n      showAlert(\"light mode enabled\",\"success\");\r\n    }\r\n  }\r\n  const [Alertt, setAlertt] = useState(null);\r\n  function showAlert(msg,type){\r\n    // function capitalize(msg){\r\n      let lowerText=msg.toLowerCase();\r\n      msg= msg.charAt(0).toUpperCase()+lowerText.slice(1);\r\n    // }\r\n      setAlertt({\r\n        message:msg,\r\n        type:type\r\n      });\r\n      setTimeout(() => {\r\n        setAlertt(null);\r\n      }, 5000);\r\n  }\r\n  // const [Blue, setBlue] = useState(\r\n  //   null\r\n  // )\r\n  // const [Color, setColor] = useState(\"white\");\r\n  // function Bluish(){\r\n  //   // document.getElementsByTagName(\"nav\").backgroundColor=\"blue\";\r\n  //   console.log(\"adfl;kj\");\r\n  //   setBlue({\r\n  //     color:\"white\",\r\n  //     backgroundColor:\"blue\"\r\n  //   })\r\n  // }\r\n  const [Bluish, setBluish] = useState(\"\");\r\n  function changeToBlue(){\r\n    console.log(\" lkjsdflj; \")\r\n    setBluish(\"Blue\");\r\n  }\r\n\r\n  return (\r\n      <>\r\n    {/* <Router> */}\r\n\r\n      <Navbar title={title} Mode={Mode} ToggleMode={toggleMode} Style={Style} Bluish={Bluish} changeToBlue={changeToBlue} />\r\n      <Alert Alertt={Alertt}  />\r\n      {/* <div className=\"container my-3\"> */}\r\n        \r\n      {/* <Routes> */}\r\n      {/* <Route  path=\"/about\" element={ <About /> }/> */}\r\n        {/* <About /> */}\r\n      {/*  </Route> */}\r\n      {/* <Route  path=\"/\" element={<Textarea Mode={Mode} showAlert={showAlert} />}/> */}\r\n        <Textarea Mode={Mode} showAlert={showAlert} />\r\n      {/* </Route> */}\r\n      {/* <Route element={<h1>error! not found!</h1>} /> */}\r\n      {/* </Routes> */}\r\n      {/* </div> */}\r\n      {/* <About /> */}\r\n      {/* </Router> */}\r\n     </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}