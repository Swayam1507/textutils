{"version":3,"sources":["logo.svg","components/Navbar.js","components/textarea.js","components/About.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","props","react_default","a","createElement","Fragment","className","concat","Mode","Bluish","react_router_dom","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","changeToBlue","class","role","ToggleMode","for","style","Style","defaultProps","Textarea","_useState","useState","_useState2","Object","slicedToArray","text","setText","color","placeholder","value","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","split","length","About","backgroundColor","setStyle","_useState3","_useState4","Enable","setEnable","aria-labelledby","data-bs-parent","Alert","Alertt","message","App","setMode","_useState5","_useState6","setAlertt","msg","lowerText","charAt","slice","setTimeout","_useState7","_useState8","setBluish","components_Navbar","document","body","console","log","react_router","path","element","components_textarea","reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.c0080c57.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import PropTypes from \"prop-types\";\r\nimport React from 'react';\r\nimport  {Link} from \"react-router-dom\";\r\nimport \".././cssOfComponents/Navbar.css\"\r\nfunction Navbar(props){\r\n  // const [Mode, setMode] = useState(props.Mode);\r\n  // const [Style, setStyle] = useState({\r\n  //   color:\"black\"\r\n  // });\r\n  \r\n    // const toggleMode=()=>{\r\n    //   if(Mode===\"light\"){\r\n    //     setMode(\"dark\");\r\n    //     setStyle({color:\"white\"});\r\n    //     document.body.style.backgroundColor=\"black\";\r\n    //   }\r\n    //   else{\r\n    //     setMode(\"light\");\r\n    //     setStyle({color:\"black\"});\r\n    //     document.body.style.backgroundColor=\"white\";\r\n    //   }\r\n    // }\r\n    // function change(){\r\n    //   if(Mode===\"dark\"){\r\n    //     setStyle({color : \"black\"});\r\n    //   }\r\n    //   else{\r\n    //     setStyle({color : \"white\"});\r\n    //   }\r\n    // }\r\n    \r\n    return(\r\n        <>\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.Mode} bg-${props.Mode} ${props.Bluish}`} >\r\n  <div className=\"container-fluid\">\r\n    <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n        </li>\r\n        {/* <li className=\"nav-item dropdown\">\r\n          <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n            Dropdown\r\n          </a>\r\n          <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n            <li><a className=\"dropdown-item\" href=\"#\">Action</a></li>\r\n            <li><a className=\"dropdown-item\" href=\"#\">Another action</a></li>\r\n            <li><hr className=\"dropdown-divider\"/></li>\r\n            <li><a className=\"dropdown-item\" href=\"#\">Something else here</a></li>\r\n          </ul>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link disabled\">Disabled</a>\r\n        </li> */}\r\n      </ul>\r\n      {/* <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      <div className=\"circle1\" onClick={props.changeToBlue} ></div>\r\n      <div className=\"circle2\"></div>\r\n      <div className=\"circle3\"></div>\r\n      <div class=\"form-check form-switch\">\r\n  <input class=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.ToggleMode}/>\r\n  <label class=\"form-check-label\" for=\"flexSwitchCheckDefault\" style={props.Style}  >Enable dark mode</label>\r\n</div>\r\n      \r\n    </div>\r\n  </div>\r\n</nav>\r\n    </>\r\n    \r\n    );\r\n    \r\n  }\r\n  \r\n  Navbar.propTypes={title : PropTypes.string };\r\n  Navbar.defaultProps = {title : \"vidhi\"};\r\n\r\n\r\nexport default Navbar;\r\n","import React, { useState } from 'react';\r\nfunction Textarea(props) {\r\n    const [text, setText] = useState('');\r\n    const Change=(event) =>{\r\n        // console.log(\"changed\");\r\n        setText(event.target.value);\r\n    };\r\n    const ClickUpper=() =>{\r\n        // console.log(text);\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"changed to uppercase\",\"success\")\r\n    };\r\n    const ClickLower=()=>{\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"changed to lowercase\",\"success\")\r\n    }\r\n    const ClickClear=()=>{\r\n        setText(\"\");\r\n        props.showAlert(\"text cleared\",\"success\")\r\n    }\r\n    // setText('alsdkjf');\r\n    return (\r\n        <>\r\n            <div className=\"mb-3 container\">\r\n                <h1 className=\"mb-3\" style={{color: props.Mode===\"light\"?\"black\":\"white\"}}>Input text </h1>\r\n                <textarea  placeholder='Enter something' className=\"form-control mb-3\" value={text} onChange={Change} id=\"exampleFormControlTextarea1\" rows=\"7\"></textarea>\r\n                <button className=\"btn btn-primary mx-2\" onClick={ClickUpper}>click to Uppercase</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={ClickLower}>click to Lowercase</button>\r\n                <button className=\"btn btn-danger mx-2\" onClick={ClickClear}>clear</button>\r\n            </div>\r\n            <div className=\"container\" style={{color: props.Mode===\"light\"?\"black\":\"white\"}}>\r\n                <p>total words : {text.split(\" \").length} total characters : {text.length}</p>\r\n                <h1>Summary</h1>\r\n                <p>{text===\"\"?\"Enter something in above textbox for summary\":text}</p>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default Textarea;","import React,{useState} from \"react\";\r\n\r\nexport default function About() {\r\n    // let Style={\r\n    //     backgroundColor:\"black\",\r\n    //     color:\"red\"\r\n    // }\r\n    const [Style, setStyle] = useState({\r\n        backgroundColor:\"white\",\r\n        color:\"black\"\r\n    });\r\n    const [Enable, setEnable] = useState(\"Enable dark mode\");\r\n    function Click(){\r\n        if(Style.backgroundColor===\"white\"){\r\n            setStyle({\r\n                backgroundColor:\"black\",\r\n                color:\"white\"\r\n            });\r\n            setEnable(\"Enable light mode\");\r\n        }\r\n        else{\r\n            setStyle({\r\n                backgroundColor:\"white\",\r\n                color:\"black\"\r\n            });\r\n            setEnable(\"Enable dark mode\");\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"accordion my-3\" id=\"accordionExample\"  >\r\n                <div className=\"accordion-item\" style={Style}>\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\" >\r\n                        <button\r\n                            className=\"accordion-button\"\r\n                            type=\"button\"\r\n                            data-bs-toggle=\"collapse\"\r\n                            data-bs-target=\"#collapseOne\"\r\n                            aria-expanded=\"true\"\r\n                            aria-controls=\"collapseOne\"\r\n                            style={Style}\r\n                        >\r\n                            Accordion Item #1\r\n                        </button>\r\n                    </h2>\r\n                    <div\r\n                        id=\"collapseOne\"\r\n                        className=\"accordion-collapse collapse show\"\r\n                        aria-labelledby=\"headingOne\"\r\n                        data-bs-parent=\"#accordionExample\"\r\n                    >\r\n                        <div className=\"accordion-body\" >\r\n                            <strong>This is the first item's accordion body.</strong> It is\r\n                            shown by default, until the collapse plugin adds the appropriate\r\n                            classes that we use to style each element. These classes control\r\n                            the overall appearance, as well as the showing and hiding via CSS\r\n                            transitions. You can modify any of this with custom CSS or\r\n                            overriding our default variables. It's also worth noting that just\r\n                            about any HTML can go within the <code>.accordion-body</code>,\r\n                            though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\" style={Style}>\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                        <button\r\n                            className=\"accordion-button collapsed\"\r\n                            type=\"button\"\r\n                            data-bs-toggle=\"collapse\"\r\n                            data-bs-target=\"#collapseTwo\"\r\n                            aria-expanded=\"false\"\r\n                            aria-controls=\"collapseTwo\"\r\n                            style={Style}\r\n                        >\r\n                            Accordion Item #2\r\n                        </button>\r\n                    </h2>\r\n                    <div\r\n                        id=\"collapseTwo\"\r\n                        className=\"accordion-collapse collapse\"\r\n                        aria-labelledby=\"headingTwo\"\r\n                        data-bs-parent=\"#accordionExample\"\r\n                    >\r\n                        <div className=\"accordion-body\">\r\n                            <strong>This is the second item's accordion body.</strong> It is\r\n                            hidden by default, until the collapse plugin adds the appropriate\r\n                            classes that we use to style each element. These classes control\r\n                            the overall appearance, as well as the showing and hiding via CSS\r\n                            transitions. You can modify any of this with custom CSS or\r\n                            overriding our default variables. It's also worth noting that just\r\n                            about any HTML can go within the <code>.accordion-body</code>,\r\n                            though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\" style={Style}>\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                        <button\r\n                            className=\"accordion-button collapsed\"\r\n                            type=\"button\"\r\n                            data-bs-toggle=\"collapse\"\r\n                            data-bs-target=\"#collapseThree\"\r\n                            aria-expanded=\"false\"\r\n                            aria-controls=\"collapseThree\"\r\n                            style={Style}\r\n                        >\r\n                            Accordion Item #3\r\n                        </button>\r\n                    </h2>\r\n                    <div\r\n                        id=\"collapseThree\"\r\n                        className=\"accordion-collapse collapse\"\r\n                        aria-labelledby=\"headingThree\"\r\n                        data-bs-parent=\"#accordionExample\"\r\n                    >\r\n                        <div className=\"accordion-body\">\r\n                            <strong>This is the third item's accordion body.</strong> It is\r\n                            hidden by default, until the collapse plugin adds the appropriate\r\n                            classes that we use to style each element. These classes control\r\n                            the overall appearance, as well as the showing and hiding via CSS\r\n                            transitions. You can modify any of this with custom CSS or\r\n                            overriding our default variables. It's also worth noting that just\r\n                            about any HTML can go within the <code>.accordion-body</code>,\r\n                            though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <button type=\"button\" class=\"btn btn-primary mx-3\" onClick={Click}>{Enable}</button>\r\n        </>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n    // const [Alertt, setAlertt] = useState(null);\r\n    // function showAlert(){\r\n    //     setAlertt(props.msg);\r\n    // }\r\n    // // setAlertt(props.Alertt);\r\n    // setAlertt(\"heyyy\");\r\n    // function capitalize(text){\r\n    //   let lowerText=text.toLowerCase();\r\n    //   return text.charAt(0).toUpperCase()+lowerText.slice(1);\r\n    // }\r\n    return (\r\n    props.Alertt && <div className={`alert alert-${props.Alertt.type}`} role=\"alert\"  >\r\n      {props.Alertt.message}\r\n    </div>\r\n  );\r\n}\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar.js\";\nimport Textarea from \"./components/textarea.js\";\nimport React,{useState} from 'react'\nimport About from \"./components/About.js\";\nimport Alert from \"./components/Alert\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route} from \"react-router-dom\";\nlet title = \"SWAYAM\";\nfunction App() {\n  const [Mode, setMode] = useState(\"light\");\n  const [Style, setStyle] = useState({\n    color:\"black\"\n  });\n  const toggleMode=()=>{\n    if(Mode===\"light\"){\n      setMode(\"dark\");\n      setStyle({color:\"white\"});\n      document.body.style.backgroundColor=\"black\";\n      showAlert(\"dark mode enabled\",\"success\");\n    }\n    else{\n      setMode(\"light\");\n      setStyle({color:\"black\"});\n      document.body.style.backgroundColor=\"white\";\n      showAlert(\"light mode enabled\",\"success\");\n    }\n  }\n  const [Alertt, setAlertt] = useState(null);\n  function showAlert(msg,type){\n    // function capitalize(msg){\n      let lowerText=msg.toLowerCase();\n      msg= msg.charAt(0).toUpperCase()+lowerText.slice(1);\n    // }\n      setAlertt({\n        message:msg,\n        type:type\n      });\n      setTimeout(() => {\n        setAlertt(null);\n      }, 5000);\n  }\n  // const [Blue, setBlue] = useState(\n  //   null\n  // )\n  // const [Color, setColor] = useState(\"white\");\n  // function Bluish(){\n  //   // document.getElementsByTagName(\"nav\").backgroundColor=\"blue\";\n  //   console.log(\"adfl;kj\");\n  //   setBlue({\n  //     color:\"white\",\n  //     backgroundColor:\"blue\"\n  //   })\n  // }\n  const [Bluish, setBluish] = useState(\"\");\n  function changeToBlue(){\n    console.log(\" lkjsdflj; \")\n    setBluish(\"Blue\");\n  }\n\n  return (\n      <>\n    <Router>\n\n      <Navbar title={title} Mode={Mode} ToggleMode={toggleMode} Style={Style} Bluish={Bluish} changeToBlue={changeToBlue} />\n      <Alert Alertt={Alertt}  />\n      {/* <div className=\"container my-3\"> */}\n        \n      <Routes>\n      <Route  path=\"/about\" element={ <About /> }/>\n        {/* <About /> */}\n      {/*  </Route> */}\n      <Route  path=\"/\" element={<Textarea Mode={Mode} showAlert={showAlert} />}/>\n        {/* <Textarea Mode={Mode} showAlert={showAlert} /> */}\n      {/* </Route> */}\n      {/* <Route element={<h1>error! not found!</h1>} /> */}\n      </Routes>\n      {/* </div> */}\n      {/* <About /> */}\n      </Router>\n     </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}